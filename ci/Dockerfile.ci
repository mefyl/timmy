FROM alpine:3.16.2 AS opam-base

# No `apk --no-cache` because it makes `conf-pkg-config` fail.
# See https://github.com/ocaml/opam-repository/issues/22094
RUN apk add bash coreutils docker-cli gcc git linux-headers m4 make musl-dev opam openssh
ARG OCAML_VERSION
RUN opam init  --compiler="$OCAML_VERSION" --disable-sandboxing --dot-profile=/etc/profile.d/opam.sh --shell-setup --verbose --yes && opam clean -a -c -s --logs -r && rm -rf /root/.opam/$OCAML_VERSION/bin/*.byte
RUN opam config set jobs $(nproc)
RUN chmod a+x /root


FROM opam-base

ENV OPAMROOTISOK=1
ENV ENV="/etc/profile"
ENV PATH="/root/.opam/$OCAML_VERSION/bin:$PATH"
ADD .logistic/id_rsa* /root/.ssh/
RUN chmod 600 /root/.ssh/id_rsa
RUN ssh-keyscan gitlab.routine.co > /root/.ssh/known_hosts
# No recursive lookup available
ARG PACKAGES
RUN if test -n "$PACKAGES"; then apk add --no-cache $PACKAGES; fi
ADD .exists *.opam.extdeps /root/
RUN opam update && \
    opam switch set-invariant ocamlformat.0.20.1 && \
    if EXTDEPS=$(find /root -name '*.extdeps'); then \
      opam install --confirm-level=unsafe-yes --deps-only --with-test $EXTDEPS; \
    fi && \
    opam clean -a -c -s --logs -r && \
    rm -rf /root/.cache/dune /tmp/packages
ARG OPAM_PACKAGES OPAM_WITHOUT_PACKAGES
ADD .exists *.opam /root/
RUN opam repository add --all routine git@gitlab.routine.co:routine/opam && \
    opam update && \
    opam install --confirm-level=unsafe-yes --deps-only --with-test /root && \
    (if test -n "$OPAM_PACKAGES"; then opam install --confirm-level=unsafe-yes $OPAM_PACKAGES; fi) && \
    (if test -n "$OPAM_WITHOUT_PACKAGES"; then opam remove --yes $OPAM_WITHOUT_PACKAGES; fi) && \
    opam clean -a -c -s --logs -r && \
    rm -rf /root/.cache/dune
ADD .exists package*.json yarn*.lock /root/
RUN if test -e /root/package.json; then \
    npm install -g yarn; \
    cd /root && yarn install --network-concurrency 1; \
    rm -rf /usr/local/share/.cache /root/.cache /tmp/*; \
    fi
ENV NODE_PATH=/root/node_modules
ENTRYPOINT ["/bin/ash", "-l", "-c"]
