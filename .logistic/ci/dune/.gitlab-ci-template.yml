stages:
  - environment
  - build
  - check
  - package
  - deploy

before_script:
  - which docker && echo "$CI_REGISTRY_PASSWORD" | docker login "$CI_REGISTRY" --username "$CI_REGISTRY_USER" --password-stdin

variables:
  BRANCH: "$CI_COMMIT_REF_NAME"
  IMAGE_CI: "$CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/ci:$CI_COMMIT_REF_SLUG"
  IMAGE_CI_MASTER: "$CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/ci:master"
  IMAGE: "$CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME"
  SLUG: "$CI_COMMIT_REF_SLUG"
  FROM_SCRATCH:
    value: ""
    description: "Rebuild Docker images from scratch if not empty"
  DUNE_CACHE_STORAGE_MODE: "copy"

.ocaml:
  image: "$CI_REGISTRY/routine/logistic/dune-builder:5251af8"

.ocaml-build:
  extends: .ocaml
  stage: build
  script:
    - make -f .logistic/ci/dune/Makefile lint
    - make -f .logistic/ci/dune/Makefile build
  artifacts:
    expire_in: 10 days
    paths:
      - _build/

.ocaml-check:
  extends: .ocaml
  stage: check
  script:
    - make -f .logistic/ci/dune/Makefile check
  artifacts:
    expire_in: 10 days
    paths:
      - _build/

.ocaml-package:
  extends: .ocaml
  stage: package
  script:
    - make -f .logistic/ci/dune/Makefile package
  after_script:
    - make -f .logistic/ci/dune/Makefile package/clean

.ocaml-opam:
  extends: .ocaml
  stage: package
  script:
    - make -f .logistic/ci/dune/Makefile opam
  rules:
    - if: '$CI_COMMIT_TAG =~ /[0-9]+\.[0-9]+\.[0-9]+/'
